# Initialize Kubernetes cluster.
- name: Initialize Kubernetes cluster
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ansible_eth0.ipv4.address}}
  args:
    creates: /etc/kubernetes/admin.conf
  run_once: true
  when: inventory_hostname in groups['kubernetes_master']
  delegate_to: stg-ec2-k8s-mtr-1
  tags:
    - configure

# Configure Kubernetes client with admin user credentials.
- name: Configure Kubernetes client with admin user credentials
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{kubernetes.client.conf_dir}}/config"
    owner: ec2-user
    group: ec2-user
    remote_src: yes
  run_once: true
  when: inventory_hostname in groups['kubernetes_master']
  delegate_to: stg-ec2-k8s-mtr-1
  tags:
    - configure

# Create Flannel network in Kubernetes cluster.
- name: Create Flannel network in Kubernetes cluster
  command: kubectl apply -f {{kubernetes.network.flannel}}
  become: yes
  become_user: ec2-user
  run_once: true
  when: inventory_hostname in groups['kubernetes_master']
  delegate_to: stg-ec2-k8s-mtr-1
  tags:
    - configure

# Enable master Kubernetes node to run pods.
- name: Enable master Kubernetes node to run pods
  command: kubectl taint nodes --all node-role.kubernetes.io/master-
  become: yes
  become_user: ec2-user
  run_once: true
  when: inventory_hostname in groups['kubernetes_master']
  ignore_errors: yes
  delegate_to: stg-ec2-k8s-mtr-1
  tags:
    - configure

# Generate token in Kubernetes cluster.
- name: Generate token in Kubernetes cluster
  command: kubeadm token create --kubeconfig=/etc/kubernetes/admin.conf --print-join-command
  register: kubernetes-worker-join-cmd
  run_once: true
  when: inventory_hostname in groups['kubernetes_master']
  delegate_to: stg-ec2-k8s-mtr-1
  tags:
    - configure

# Join worker Kubernetes node to the cluster.
- name: Join worker Kubernetes node to the cluster
  command: "{{hostvars['stg-ec2-k8s-mtr-1']['kubernetes-worker-join-cmd']['stdout']}}"
  args:
    creates: /etc/kubernetes/kubelet.conf
  run_once: true
  when: inventory_hostname in groups['kubernetes_worker']
  tags:
    - configure

# Download Kubernetes starter-kit from GitHub.
- name: Download Kubernetes starter-kit from GitHub
  git:
    repo: https://github.com/sloopstash/kickstart-kubernetes.git
    version: master
    dest: "{{kubernetes.starter_kit_dir}}"
    update: yes
    force: yes
  tags:
    - configure

# Fetch App Git repository.
- name: Fetch App Git repository
  git:
    repo: https://github.com/sloopstash/sloopstash-crm-app.git
    version: master
    dest: "{{kubernetes.starter_kit_dir}}/app"
    update: yes
    force: yes
  tags:
    - configure

# Configure App for Redis.
- name: Configure App for Redis
  template:
    src: redis.conf.j2
    dest: "{{kubernetes.starter_kit_dir}}/app/config/redis.conf"
    owner: root
    group: root
    mode: 0600
  tags:
    - configure
